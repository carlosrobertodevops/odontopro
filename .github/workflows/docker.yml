name: Docker Images

on:
  push:
    branches: [main]
    tags: ["v*"]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive tags
        id: vars
        run: |
          REPO_LC=$(echo "ghcr.io/${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          echo "WEB_IMAGE=${REPO_LC}-web" >> $GITHUB_OUTPUT
          echo "API_IMAGE=${REPO_LC}-api" >> $GITHUB_OUTPUT
          echo "SHA_TAG=sha-${GITHUB_SHA}" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "REF_TAG=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          fi

      - name: Build & Push • Web
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          target: runner
          platforms: linux/amd64
          push: true
          tags: |
            ${{ steps.vars.outputs.WEB_IMAGE }}:${{ steps.vars.outputs.SHA_TAG }}
            ${{ steps.vars.outputs.WEB_IMAGE }}:latest
            ${{ steps.vars.outputs.REF_TAG && format('{0}:{1}', steps.vars.outputs.WEB_IMAGE, steps.vars.outputs.REF_TAG) || '' }}
          cache-from: type=registry,ref=${{ steps.vars.outputs.WEB_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ steps.vars.outputs.WEB_IMAGE }}:buildcache,mode=max

      - name: Build & Push • API
        uses: docker/build-push-action@v6
        with:
          context: .
          file: api/Dockerfile
          target: runner
          platforms: linux/amd64
          push: true
          tags: |
            ${{ steps.vars.outputs.API_IMAGE }}:${{ steps.vars.outputs.SHA_TAG }}
            ${{ steps.vars.outputs.API_IMAGE }}:latest
            ${{ steps.vars.outputs.REF_TAG && format('{0}:{1}', steps.vars.outputs.API_IMAGE, steps.vars.outputs.REF_TAG) || '' }}
          cache-from: type=registry,ref=${{ steps.vars.outputs.API_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ steps.vars.outputs.API_IMAGE }}:buildcache,mode=max
