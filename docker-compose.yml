services:
  # 1) Executa migrações Prisma (re-tenta até o DB responder)
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: deps
    env_file:
      - .env.local.docker
    command: >
      sh -lc '
      echo "[migrate] aguardando DB...";
      for i in $(seq 1 30); do
        npx prisma migrate deploy && exit 0;
        echo "[migrate] ainda indisponível, nova tentativa em 3s... ($i/30)";
        sleep 3;
      done;
      echo "[migrate] falhou após várias tentativas"; exit 1'
    restart: "no"

  # 2) App Next.js (produção leve, mas rodando local)
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    env_file:
      - .env.local.docker
    environment:
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped

  # 3) (OPCIONAL) Stripe CLI para ouvir eventos e encaminhar para o web
  #    Use somente se quiser testar webhooks localmente.
  stripe-listener:
    image: stripe/stripe-cli:latest
    env_file:
      - .env.local.docker
    command: >
      sh -lc "
      stripe listen
        --api-key ${STRIPE_SECRET_KEY}
        --forward-to http://web:3000/api/stripe/webhook
      "
    depends_on:
      - web
    # Dica: ao rodar pela 1ª vez o stripe-cli imprime um WEBHOOK SECRET.
    # Copie-o e coloque em STRIPE_WEBHOOK_SECRET do seu .env.local.docker.
