services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: odontopro
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d odontopro"]
      interval: 5s
      timeout: 5s
      retries: 30
    restart: unless-stopped

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: deps
    env_file:
      - .env.coolify
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -lc '
        echo "[migrate] aguardando DB...";
        for i in $(seq 1 60); do
          npx prisma migrate deploy && exit 0;
          echo "[migrate] DB indisponível, tentando em 5s... ($i/60)";
          sleep 5;
        done;
        echo "[migrate] falhou após várias tentativas"; exit 1;
      '
    restart: "no"

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    env_file:
      - .env.coolify
    environment:
      NODE_ENV: production
      PORT: 3000
      HOSTNAME: 0.0.0.0
    depends_on:
      migrate:
        condition: service_completed_successfully
      api:
        condition: service_started
    expose:
      - "3000"
    restart: unless-stopped

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      target: runner
    env_file:
      - .env.coolify
    environment:
      NODE_ENV: production
    expose:
      - "4000"
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped

volumes:
  pgdata:
